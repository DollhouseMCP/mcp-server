---
name: Core Build & Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_OPTIONS: '--max-old-space-size=4096 --experimental-vm-modules'
  CI: true

jobs:
  core-test:
    name: Test (${{ matrix.os }}, Node ${{ matrix.node-version }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: ['20.x']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      # Temporarily disabled TypeScript cache to debug CI issues
      # - name: Cache TypeScript build
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       dist/
      #       build/
      #       *.tsbuildinfo
      #     key: typescript-build-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('src/**/*.ts', 'tsconfig*.json', 'package.json', 'package-lock.json') }}
      #     restore-keys: |
      #       typescript-build-${{ runner.os }}-${{ matrix.node-version }}-
      #       typescript-build-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Debug file structure
        run: |
          echo "=== Current directory ==="
          pwd
          echo "=== Node version ==="
          node --version
          echo "=== NPM version ==="
          npm --version
          echo "=== Root files ==="
          ls jest.* 2>/dev/null || echo "No jest files found"
          echo "=== Source files ==="
          ls src/update/ 2>/dev/null || echo "src/update not found"
          echo "=== Config files ==="
          ls src/config/ 2>/dev/null || echo "src/config not found"
          echo "=== Dist files ==="
          ls dist/update/ 2>/dev/null || echo "dist/update not found"
          echo "=== Test files ==="
          ls __tests__/unit/auto-update/ 2>/dev/null || echo "auto-update tests not found"
          echo "=== NODE_PATH ==="
          echo $NODE_PATH
          echo "=== Jest config ==="
          cat jest.config.cjs

      - name: Cache Jest
        uses: actions/cache@v4
        with:
          path: |
            .jest-cache/
            coverage/
            node_modules/.cache/jest/
          key: jest-cache-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('__tests__/**/*.ts', 'jest.config.*', 'src/**/*.ts', 'package.json', 'package-lock.json') }}
          restore-keys: |
            jest-cache-${{ runner.os }}-${{ matrix.node-version }}-
            jest-cache-${{ runner.os }}-

      - name: Clear Jest cache
        run: npx jest --clearCache

      - name: Run test suite (original method)
        id: original_tests
        run: npm test
        continue-on-error: true

      - name: Debug failed tests environment
        if: steps.original_tests.outcome == 'failure'
        run: |
          echo "=== Original tests failed, debugging environment ==="
          echo "Current directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la
          echo "=== Checking if package.json exists ==="
          if [ -f "package.json" ]; then
            echo "✓ package.json exists"
            echo "First 5 lines:"
            head -5 package.json
          else
            echo "✗ package.json NOT FOUND"
          fi
          
      - name: Run compiled tests approach
        if: steps.original_tests.outcome == 'failure'
        working-directory: ${{ github.workspace }}
        run: |
          echo "=== Running compiled test approach ==="
          echo "Explicitly setting working directory to: ${{ github.workspace }}"
          pwd
          # Build the tests first
          npm run build:test
          # Run the compiled tests using cross-env
          ./node_modules/.bin/cross-env NODE_OPTIONS='--experimental-vm-modules' ./node_modules/.bin/jest --config jest.config.compiled.cjs --ci --watchAll=false

      - name: Validation complete
        run: |
          echo "✅ Core Build & Test Complete!"
          echo "Platform: ${{ matrix.os }}"
          echo "Node.js: ${{ matrix.node-version }}"