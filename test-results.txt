
> @dollhousemcp/mcp-server@1.6.9 test
> cross-env "NODE_OPTIONS=--experimental-vm-modules --no-warnings" jest --config test/jest.config.cjs test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts

FAIL test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts
  SubmitToPortfolioTool
    Authentication checks
      ✕ should fail when user is not authenticated
      ✕ should proceed when user is authenticated (1 ms)
    Unicode validation
      ✕ should reject invalid Unicode in element name
      ✕ should normalize valid Unicode in element name
    Local content discovery
      ✕ should find content by exact filename match
      ✕ should find content by partial filename match
      ✕ should fail when content is not found
    File size validation
      ✕ should reject files larger than 10MB
      ✕ should accept files under 10MB
    Content validation
      ✕ should reject content with critical security issues
      ✕ should allow content with non-critical warnings
    Token management
      ✕ should fail when token cannot be retrieved
      ✕ should set token on PortfolioRepoManager
    Portfolio repository management
      ✕ should create portfolio if it does not exist
      ✕ should not create portfolio if it already exists
      ✕ should fail if portfolio creation fails
    Element submission
      ✕ should save element with correct structure
      ✕ should return success with GitHub URL
      ✕ should fail if element save fails
    Error handling
      ✕ should handle unexpected errors gracefully
      ✕ should handle non-Error objects
    Collection submission with file content
      ✕ should read and include full file content when localPath provided
      ✕ should reject files exceeding size limit without truncation
      ✕ should handle security validation failures for file content
      ✕ should handle file not found errors gracefully
      ✕ should validate frontmatter presence in file content
      ✕ should handle Unicode content correctly

  ● SubmitToPortfolioTool › Authentication checks › should fail when user is not authenticated

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Authentication checks › should proceed when user is authenticated

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Unicode validation › should reject invalid Unicode in element name

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Unicode validation › should normalize valid Unicode in element name

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Local content discovery › should find content by exact filename match

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Local content discovery › should find content by partial filename match

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Local content discovery › should fail when content is not found

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › File size validation › should reject files larger than 10MB

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › File size validation › should accept files under 10MB

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Content validation › should reject content with critical security issues

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Content validation › should allow content with non-critical warnings

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Token management › should fail when token cannot be retrieved

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Token management › should set token on PortfolioRepoManager

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Portfolio repository management › should create portfolio if it does not exist

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Portfolio repository management › should not create portfolio if it already exists

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Portfolio repository management › should fail if portfolio creation fails

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Element submission › should save element with correct structure

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Element submission › should return success with GitHub URL

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Element submission › should fail if element save fails

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Error handling › should handle unexpected errors gracefully

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Error handling › should handle non-Error objects

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Collection submission with file content › should read and include full file content when localPath provided

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Collection submission with file content › should reject files exceeding size limit without truncation

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Collection submission with file content › should handle security validation failures for file content

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Collection submission with file content › should handle file not found errors gracefully

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Collection submission with file content › should validate frontmatter presence in file content

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

  ● SubmitToPortfolioTool › Collection submission with file content › should handle Unicode content correctly

    TypeError: GitHubAuthManager.mockImplementation is not a function

      72 |     
      73 |     // Mock constructors - need to cast to jest.Mock
    > 74 |     (GitHubAuthManager as unknown as jest.Mock).mockImplementation(() => mockAuthManager);
         |                                                 ^
      75 |     (PortfolioRepoManager as unknown as jest.Mock).mockImplementation(() => mockPortfolioRepoManager);
      76 |     
      77 |     (TokenManager.getGitHubTokenAsync as jest.Mock).mockResolvedValue('test-token');

      at Object.<anonymous> (test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts:74:49)

Test Suites: 1 failed, 1 total
Tests:       27 failed, 27 total
Snapshots:   0 total
Time:        0.207 s, estimated 1 s
Ran all test suites matching test/__tests__/unit/tools/portfolio/submitToPortfolioTool.test.ts.
Jest did not exit one second after the test run has completed.

'This usually means that there are asynchronous operations that weren't stopped in your tests. Consider running Jest with `--detectOpenHandles` to troubleshoot this issue.
